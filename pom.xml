<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.vaadin.flow.demo</groupId>
    <artifactId>patient-portal-flow</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.6.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8
        </project.reporting.outputEncoding>
        <failOnMissingWebXml>false</failOnMissingWebXml>

        <!-- Dependencies -->
        <flow.version>0.1-SNAPSHOT</flow.version>

        <!-- Plugins -->
        <frontend.maven.plugin.version>1.4</frontend.maven.plugin.version>
        <jetty.version>9.3.7.v20160115</jetty.version>
        <maven.failsafe.plugin.version>2.20</maven.failsafe.plugin.version>
        <maven.war.plugin.version>3.0.0</maven.war.plugin.version>
        <maven.resources.plugin.version>3.0.2</maven.resources.plugin.version>
        <maven.clean.plugin.version>3.0.0</maven.clean.plugin.version>

        <spring-boot.version>1.5.6.RELEASE</spring-boot.version>

        <!-- Frontend -->
        <node.version>v7.10.1</node.version>
        <npm.version>5.3.0</npm.version>
        <yarn.version>v0.28.1</yarn.version>
        <frontend.working.directory>src/main/webapp</frontend.working.directory>
        <vaadin.frontend.path>VAADIN/static/frontend</vaadin.frontend.path>
        <skipFrontendBuild>false</skipFrontendBuild>
    </properties>

    <repositories>
        <repository>
            <id>flow-internal-release</id>
            <url>https://repo.vaadin.com/nexus/content/repositories/flow</url>
        </repository>

        <repository>
            <id>vaadin-snapshots</id>
            <url>
                https://oss.sonatype.org/content/repositories/vaadin-snapshots/
            </url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

        <repository>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>repo-vaadin-com-snapshots</id>
            <url>
                https://repo.vaadin.com/nexus/content/repositories/website-snapshots/
            </url>
        </repository>

        <repository>
            <id>vaadin-addons</id>
            <url>http://maven.vaadin.com/vaadin-addons</url>
        </repository>

    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>flow</artifactId>
            <version>${flow.version}</version>
        </dependency>

        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>flow-components</artifactId>
            <version>${flow.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>flow-test-util</artifactId>
            <version>0.1.17</version>
        </dependency>

        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>hummingbird-ext</artifactId>
            <version>4.0.0-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>com.vaadin</groupId>
                    <artifactId>flow</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.1</version>
        </dependency>

        <dependency>
            <groupId>com.vaadin.demo</groupId>
            <artifactId>patient-portal-backend</artifactId>
            <version>0.0.1-SNAPSHOT</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-juli</artifactId>
                </exclusion>
            </exclusions>
        </dependency>


        <!-- Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-juli</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- End Spring -->
    </dependencies>

    <build>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven.clean.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven.war.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>${frontend.maven.plugin.version}</version>
                    <configuration>
                        <nodeVersion>${node.version}</nodeVersion>
                        <yarnVersion>${yarn.version}</yarnVersion>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>
                                ${frontend.working.directory}/bower_components
                            </directory>
                        </fileset>
                        <fileset>
                            <directory>${frontend.working.directory}/build
                            </directory>
                        </fileset>
                        <fileset>
                            <directory>${frontend.working.directory}/etc
                            </directory>
                        </fileset>
                        <fileset>
                            <directory>${frontend.working.directory}/node
                            </directory>
                        </fileset>
                        <fileset>
                            <directory>
                                ${frontend.working.directory}/node_modules
                            </directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>production</id>
            <activation>
                <property>
                    <name>vaadin.productionMode</name>
                </property>
            </activation>

            <properties>
                <yarn.build.goal>run build</yarn.build.goal>
            </properties>


            <!-- (4): Makes the package run in production mode when deployed, without the need of setting extra
                      properties on the server -->
            <dependencies>
                <dependency>
                    <groupId>com.vaadin</groupId>
                    <artifactId>flow-server-production-mode</artifactId>
                    <version>${flow.version}</version>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <!-- (5): Copies the files compiled by polymer-build to a directory from where they can be
                              served when in production mode (root of the WAR) -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <archive>
                                <manifestEntries>
                                    <Implementation-Title>${project.name}
                                    </Implementation-Title>
                                    <Implementation-Version>${project.version}
                                    </Implementation-Version>
                                </manifestEntries>
                            </archive>
                            <webResources>
                                <resource>
                                    <directory>
                                        ${frontend.working.directory}/build
                                    </directory>
                                    <targetPath>${vaadin.frontend.path}
                                    </targetPath>
                                </resource>
                            </webResources>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <version>${spring-boot.version}</version>
                        <configuration>
                            <jvmArguments>
                                -Dvaadin.frontend.url.es5=context://build/es5/
                                -Dvaadin.frontend.url.es6=context://build/es6/
                            </jvmArguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>development</id>
            <activation>
                <property>
                    <name>!vaadin.productionMode</name>
                </property>
            </activation>

            <properties>
                <yarn.build.goal>run skip-build</yarn.build.goal>
            </properties>

            <build>
                <plugins>
                    <!-- (7): Adds the files from src/main/frontend directly into the WAR when in development mode -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <configuration>
                            <webResources>
                                <resource>
                                    <directory>${frontend.working.directory}
                                    </directory>
                                    <excludes>
                                        <exclude>build/**</exclude>
                                        <exclude>node/**</exclude>
                                        <exclude>node_modules/**</exclude>
                                        <exclude>etc/**</exclude>
                                    </excludes>
                                </resource>
                            </webResources>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <version>${spring-boot.version}</version>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>frontend-build</id>
            <activation>
                <property>
                    <name>!skipFrontendBuild</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- (2): Configures the frontend plugin to compile the web components source -->
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install-node-and-yarn</id>
                                <goals>
                                    <goal>install-node-and-yarn</goal>
                                    <goal>yarn
                                    </goal> <!-- runs 'install' by default -->
                                </goals>
                                <configuration>
                                    <workingDirectory>
                                        ${frontend.working.directory}
                                    </workingDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>run-polymer-build</id>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>
                                <configuration>
                                    <workingDirectory>
                                        ${frontend.working.directory}
                                    </workingDirectory>
                                    <arguments>${yarn.build.goal}</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>
</project>

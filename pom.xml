<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.vaadin.flow.demo</groupId>
	<artifactId>patient-portal-flow</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.2.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<failOnMissingWebXml>false</failOnMissingWebXml>

		<!-- Dependencies -->
		<flow.version>0.1.7-SNAPSHOT</flow.version>
		<testbench.version>5.0.0</testbench.version>

		<!-- Plugins -->
		<frontend.maven.plugin.version>1.3</frontend.maven.plugin.version>
		<jetty.version>9.3.7.v20160115</jetty.version>
		<driver.binary.downloader.maven.plugin.version>1.0.11</driver.binary.downloader.maven.plugin.version>
		<maven.failsafe.plugin.version>2.19.1</maven.failsafe.plugin.version>
		<maven.war.plugin.version>3.0.0</maven.war.plugin.version>
		<maven.resources.plugin.version>3.0.2</maven.resources.plugin.version>
		<maven.clean.plugin.version>3.0.0</maven.clean.plugin.version>

		<!-- Frontend -->
		<node.version>v7.10.0</node.version>
		<npm.version>4.6.1</npm.version>
		<bower.working.directory>src/main/frontend</bower.working.directory>
	</properties>

	<repositories>
		<repository>
			<id>flow-internal-release</id>
			<url>https://repo.vaadin.com/nexus/content/repositories/flow</url>
		</repository>

		<repository>
			<id>flow-internal-snapshots</id>
			<url>https://repo.vaadin.com/nexus/content/repositories/flow-snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		
		<repository>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<id>repo-vaadin-com-snapshots</id>
			<url>https://repo.vaadin.com/nexus/content/repositories/website-snapshots/</url>
		</repository>

		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>flow</artifactId>
			<version>${flow.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>hummingbird-ext</artifactId>
			<version>4.0.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven.war.plugin.version}</version>
				<configuration>
					<archive>
						<manifestEntries>
							<Implementation-Title>${project.name}</Implementation-Title>
							<Implementation-Version>${project.version}</Implementation-Version>
						</manifestEntries>
					</archive>
					<webResources>
						<resource>
							<directory>${bower.working.directory}</directory>
							<include>bower_components/**</include>
							<include>components/**</include>
						</resource>
					</webResources>
				</configuration>
			</plugin>


			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${maven.clean.plugin.version}</version>
				<configuration>
					<filesets>
						<fileset>
							<directory>${bower.working.directory}/bower_components</directory>
						</fileset>
						<fileset>
							<directory>${bower.working.directory}/build</directory>
						</fileset>
						<fileset>
							<directory>${bower.working.directory}/node</directory>
						</fileset>
						<fileset>
							<directory>${bower.working.directory}/node_modules</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.version}</version>
				<configuration>
					<scanIntervalSeconds>-1</scanIntervalSeconds>
					<stopPort>8081</stopPort>
					<stopWait>5</stopWait>
					<stopKey>foo</stopKey>
					<!-- Prevent Jetty from scanning the classpath. -->
					<!-- Speeds up startup time significantly -->
					<webAppConfig>
						<webInfIncludeJarPattern>.*/flow-.*.jar$|.*/test-resources-.*.jar$</webInfIncludeJarPattern>
						<containerIncludeJarPattern>^$</containerIncludeJarPattern>
						<resourceBases>
							<resourceBase>${bower.working.directory}</resourceBase>
						</resourceBases>
					</webAppConfig>
				</configuration>
				<executions>
					<!-- start and stop jetty (running our app) when running integration 
						tests -->
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>${frontend.maven.plugin.version}</version>
				<configuration>
					<nodeVersion>${node.version}</nodeVersion>
					<npmVersion>${npm.version}</npmVersion>
				</configuration>
				<executions>
					<execution>
						<id>install-node-and-npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
							<goal>npm</goal> <!-- runs 'install' by default -->
							<goal>bower</goal> <!-- runs 'install' by default -->
						</goals>
						<configuration>
							<workingDirectory>${bower.working.directory}</workingDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
